{"id":"EXAMOD_EE","name":"ExAMod_ExcessiveEmojis","options":[],"trigger":"MESSAGE_CREATE","components":[{"type":"ACTION","action":{"type":"EXECUTE_CODE","execute_code":{"code":"// ExAMod by rovius\n// https://github.com/rovius/ExAMod\n// Excessive emojis filter\n\n// Define your configuration (replace with actual values)\nconst config = {\n    ignoredChannels: ['channelID1', 'channelID2'],\n    ignoredMembers: ['userID1', 'userID2'],\n    ignoreAdmins: false,\n    violationMessage: `Emoji spam detected! Keep your messages clean.`,\n    maxEmojis: 5,\n}\n\nasync function handleViolation(messageId, channelId, violationMessage) {\n    await deleteMessage(channelId, messageId)\n    await sendMessage(channelId, { content: violationMessage.toString() })\n}\n\n// Check if a message should be ignored in the first place\nif (\n    config.ignoredChannels.includes(channel.id) ||\n    config.ignoredMembers.includes(member.user.id) ||\n    (config.ignoreAdmins && member.permissions.includes('ADMINISTRATOR'))\n) {\n    return\n}\n\n// Use a regular expression to find emojis in the message\nconst emojiPattern = /<a?:.+?:\\d{18,19}>|\\p{Extended_Pictographic}/gu\n\n// Count the number of emojis in the message\nconst emojiCount = (message.content.match(emojiPattern) || []).length\n\nif (emojiCount > config.maxEmojis) {\n    // Excessive emojis detected, handle accordingly\n    await handleViolation(message.id, channel.id, config.violationMessage)\n}\n"}}}]}