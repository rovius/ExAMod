{"id":"EXAMOD_EM","name":"ExAMod_ExcessiveMentions","options":[],"trigger":"MESSAGE_CREATE","components":[{"type":"ACTION","action":{"type":"EXECUTE_CODE","execute_code":{"code":"// ExAMod by rovius\n// https://github.com/rovius/ExAMod\n// Excessive mentions filter\n\n// Define your configuration (replace with actual values)\nconst config = {\n    ignoredChannels: ['channelID1', 'channelID2'],\n    ignoredMembers: ['userID1', 'userID2'],\n    ignoreAdmins: false,\n    violationMessage: `Your message has too many mentions. Keep it concise.`,\n    checkEveryone: true,\n    checkMembers: true,\n    checkRoles: false,\n    maxMentions: 3,\n}\n\nasync function handleViolation(messageId, channelId, violationMessage) {\n    await deleteMessage(channelId, messageId)\n    await sendMessage(channelId, { content: violationMessage.toString() })\n}\n\n// Total in-message mentions\nlet mentions = 0\n\n// Check if a message should be ignored in the first place\nif (\n    config.ignoredChannels.includes(channel.id) ||\n    config.ignoredMembers.includes(member.user.id) ||\n    (config.ignoreAdmins && member.permissions.includes('ADMINISTRATOR'))\n) {\n    return\n}\n\n// If checkEveryone is enabled, instantly count a violation\nif (config.checkEveryone && message.mentions.everyone) {\n    await handleViolation(message.id, channel.id, config.violationMessage)\n    return\n}\n\n// If checkMembers is enabled, add member mentions to overall mentions count\nif (config.checkMembers) {\n    mentions += message.mentions.members.length\n}\n\n// If checkRoles is enabled, add role mentions to overall mentions count\nif (config.checkRoles) {\n    mentions += message.mentions.roles.length\n}\n\nif (mentions > config.maxMentions) {\n    // Excessive mentions detected, handle accordingly\n    await handleViolation(message.id, channel.id, config.violationMessage)\n}\n"}}}]}